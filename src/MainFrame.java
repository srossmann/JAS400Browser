
import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Rossmann
 */
public class MainFrame extends javax.swing.JFrame {
//******************************************************************************
// Version 0.9.2
// 1234
//
//******************************************************************************

    myTable jTable3;

    int edtCol = 0;
    int edtRow = 0;
    String altValue = "";
    String neuValue = "";

    String AS400Schemaname = "";
    String AS400Tabellenname = "";
    String AS400User = "";
    String AS400Passwort = "";
    String AS400IPAdresse = "";
    TabellenStructurTableModell TabellenStrucktur;
    DefaultListModel listenModell = new DefaultListModel();

    String SelectText = "";

    public AS400 myAS400 = null;

//******************************************************************************
//  Erzeugt ein neues MainFrame
//
//
//******************************************************************************
    public MainFrame() {
        initComponents();

        JTableHeader header = jTable2.getTableHeader();
        header.addMouseListener(new TableHeaderMouseListenerChecket(jTable2));

        LadeParametrer();

    }

    private void LadeParametrer() {

        try {
            Properties properties = new Properties();
            try (BufferedInputStream stream = new BufferedInputStream(new FileInputStream("JAS400Browser.Properties"))) {
                properties.load(stream);
            }
            AS400Schemaname = properties.getProperty("Schema");
            AS400Tabellenname = properties.getProperty("Tabelle");
            AS400User = properties.getProperty("User");
            AS400IPAdresse = properties.getProperty("IPAdresse");

        } catch (IOException e) {
        }
    }

    private void SpeicherParametrer() {
        try {
            Properties properties = new Properties();
            properties.setProperty("Schema", AS400Schemaname);
            properties.setProperty("Tabelle", AS400Tabellenname);
            properties.setProperty("User", AS400User);
            properties.setProperty("IPAdresse", AS400IPAdresse);
            try (BufferedOutputStream stream = new BufferedOutputStream(new FileOutputStream("JAS400Browser.Properties"))) {
                properties.save(stream, "Datum");
            }

        } catch (IOException e) {
        }
    }
//******************************************************************************
//
//
//
//******************************************************************************

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane4 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AS400 Browser for the Arbeitserleichterung ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jSplitPane3.setDividerLocation(300);
        jSplitPane3.setOneTouchExpandable(true);

        jSplitPane4.setDividerLocation(201);
        jSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane4.setOneTouchExpandable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText(" ");
        jLabel1.setToolTipText("");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/printer.png"))); // NOI18N
        jButton4.setText("<html>Struktur<p>drucken</html>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 879, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
        );

        jSplitPane4.setLeftComponent(jPanel1);

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("max 100 Datensätze");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Where");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/play.png"))); // NOI18N
        jButton1.setText("<html>Datensätze<p>neu laden</html>");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jToggleButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit.png"))); // NOI18N
        jToggleButton1.setText("Daten bearbeiten");
        jToggleButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jToggleButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Achtung.png"))); // NOI18N
        jToggleButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jToggleButton1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1)
                        .addGap(21, 21, 21)))
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jToggleButton1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setOneTouchExpandable(true);

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 877, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4)
                    .addContainerGap()))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jSplitPane1.setTopComponent(jPanel9);

        jScrollPane3.setViewportView(jList1);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
        );

        jSplitPane1.setBottomComponent(jPanel10);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1)
                .addContainerGap())
        );

        jSplitPane4.setRightComponent(jPanel3);

        jSplitPane3.setRightComponent(jSplitPane4);

        jComboBox1.setBackground(new java.awt.Color(255, 204, 204));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jComboBox1VetoableChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        jButton3.setText("<html>Tabelle<br>suchen</html>");
        jButton3.setToolTipText("Datensatz bearbeiten");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jSplitPane3.setLeftComponent(jPanel5);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/connect.png"))); // NOI18N
        jMenu2.setText("Logout");
        jMenu2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/info.png"))); // NOI18N
        jMenu1.setText("Info");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
//******************************************************************************
//
//
//
//******************************************************************************

    private void TableDesign(JTable Table) {
        if (Table == jTable1) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(150);
            Table.getColumnModel().getColumn(1).setPreferredWidth(300);
            Table.getColumnModel().getColumn(0).setHeaderValue("Tabelle");
            Table.getColumnModel().getColumn(1).setHeaderValue("Bezeichnung");
            Table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        }
        if (Table == jTable2) {
            Table.getColumnModel().getColumn(0).setPreferredWidth(30);
            Table.getColumnModel().getColumn(1).setPreferredWidth(100);
            Table.getColumnModel().getColumn(5).setPreferredWidth(300);
            Table.getColumnModel().getColumn(0).setHeaderValue(" ");
            Table.getColumnModel().getColumn(1).setHeaderValue("Feldname");
            Table.getColumnModel().getColumn(2).setHeaderValue("Typ");
            Table.getColumnModel().getColumn(3).setHeaderValue("Len");
            Table.getColumnModel().getColumn(4).setHeaderValue("Dec");
            Table.getColumnModel().getColumn(5).setHeaderValue("Bezeichnung");
            Table.getColumnModel().getColumn(6).setHeaderValue("Keyfolge");
            Table.getColumnModel().getColumn(7).setHeaderValue("Keyrichtung");

        }
    }
//******************************************************************************
//
//
//
//******************************************************************************
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

//******************************************************************************
//
//
//
//******************************************************************************
    private void StartSchema() {
        ResultSet rs = myAS400.getSchema();
        try {
            while (rs.next()) {
                String s = String.format("<html><b> %-10s </b><p> %s</html>", rs.getString(1), rs.getString(2));
                jComboBox1.addItem(s);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);

        }

        LadeParametrer();
        findSchema(AS400Schemaname);
        //  LadeGrid();
    }
//******************************************************************************
//
//
//
//******************************************************************************
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        LadeDatenTabelle();
    }//GEN-LAST:event_jTable1MouseClicked

//******************************************************************************
//
//
//
//******************************************************************************    
    private void LadeDatenTabelle() {
        SelectText = "";
        jTextField1.setText(SelectText);
        jCheckBox1.setSelected(true);

        LadeTabelle();
    }
//******************************************************************************
//
//
//
//******************************************************************************
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        TableSearchDialog dialog = new TableSearchDialog(new javax.swing.JFrame(), true);
        dialog.jTextField1.setText(AS400Schemaname);
        dialog.jTextField2.setText(AS400Tabellenname);
        dialog.setVisible(true);
        AS400Schemaname = dialog.jTextField1.getText();
        AS400Tabellenname = dialog.jTextField2.getText();
        findSchema(AS400Schemaname);
        findTable(AS400Tabellenname);
    }//GEN-LAST:event_jButton3ActionPerformed
//******************************************************************************
//
//
//
//******************************************************************************
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        SpeicherParametrer();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DatenNeuLaden();  // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
    }//GEN-LAST:event_jComboBox1MouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        JComboBox<?> sel = (JComboBox<?>) evt.getSource();
        String s[] = sel.getSelectedItem().toString().split(" ");
        if (!AS400Schemaname.equals(s[1])) {
            AS400Schemaname = s[1];
            LadeGrid(AS400Schemaname);        // TODO add your handling code here:        // TODO add your handling code here:

        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jComboBox1VetoableChange

    }//GEN-LAST:event_jComboBox1VetoableChange

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        LoginDialog LogInDlg = new LoginDialog(this, true);
        LogInDlg.jFormattedTextField1.setText(AS400IPAdresse);
        LogInDlg.jTextField1.setText(AS400User);
        LogInDlg.setVisible(true);

        AS400IPAdresse = LogInDlg.jFormattedTextField1.getText();
        AS400User = LogInDlg.jTextField1.getText();
        AS400Passwort = new String(LogInDlg.jPasswordField1.getPassword());

//        final WaitDialog waitDialog = new WaitDialog(new javax.swing.JFrame(), false);
//        waitDialog.toFront();
//        waitDialog.repaint();
        myAS400 = new AS400();

        myAS400.Connect(AS400IPAdresse, AS400User, AS400Passwort);

        SpeicherParametrer();

        StartSchema();

//        waitDialog.dispose();

    }//GEN-LAST:event_formWindowOpened

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        InfoDialog InfoDlg = new InfoDialog(this, true);
        InfoDlg.setVisible(true);


    }//GEN-LAST:event_jMenu1MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DatenNeuLaden();
        }
    }//GEN-LAST:event_jTextField1KeyPressed


    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        myAS400.druckeTabellenStrucktur(AS400Schemaname, AS400Tabellenname);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jToggleButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jToggleButton1StateChanged
        if (jToggleButton1.isSelected()) {
            jToggleButton1.setText("Änderungs Modus!");
            jTable3.setEnabled(true);
        } else {
            jToggleButton1.setText("Daten bearbeiten");
            jTable3.setEnabled(false);
        }

    }//GEN-LAST:event_jToggleButton1StateChanged
//***********************************1*******************************************
//
//
//
//******************************************************************************

    private Vector getFeldnamen() {
        Vector FName = new Vector<String>();

        for (int row = 0; row <= jTable2.getRowCount() - 1; row++) {
            String name = (String) jTable2.getValueAt(row, 1);
            if ((boolean) jTable2.getValueAt(row, 0) == true) {

                FName.add(name);
            }
        }

        return FName;
    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void LadeTabelle() {
        String TabellenName = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0).toString();
        String TabellenBezeichnung = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1).toString();
        jLabel1.setText(String.format("<html><b>%s</b> %s</html>", TabellenName, TabellenBezeichnung));

        LadeTabellenstrucktur(TabellenName);
        LadeTabellenDaten(TabellenName);
        TableDesign(jTable2);

    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void findTable(String Tablename) {
        String value = Tablename.trim().toUpperCase();
        for (int row = 0; row <= jTable1.getRowCount() - 1; row++) {
            for (int col = 0; col <= jTable1.getColumnCount() - 1; col++) {
                if (value.equals(jTable1.getValueAt(row, col))) {
                    jTable1.scrollRectToVisible(jTable1.getCellRect(row, 0, true));
                    jTable1.setRowSelectionInterval(row, row);
                }
            }
        }
        LadeDatenTabelle();
    }

    //******************************************************************************
//
//
//
//******************************************************************************
    private String findType(String Feldname) {
        String s = "";
        String value = Feldname.trim().toUpperCase();
        for (int row = 0; row <= jTable2.getRowCount() - 1; row++) {
            if (value.equals(jTable2.getValueAt(row, 1))) {
                s = jTable2.getValueAt(row, 2).toString();
            }
        }

        return s;
    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void findSchema(String Schema) {
        String value = Schema.trim().toUpperCase();
        String s[] = null;
        for (int row = 0; row <= jComboBox1.getItemCount() - 1; row++) {
            s = ((String) jComboBox1.getItemAt(row)).split(" ");
            if (value.equals(s[1])) {
                jComboBox1.scrollRectToVisible(jTable1.getCellRect(row, 0, true));
                jComboBox1.setSelectedIndex(row);
                break;
            }
        }
        LadeGrid(s[1]);
    }

//******************************************************************************
//
//
//
//******************************************************************************
    public void LadeGrid(String Schema) {
        AS400Schemaname = Schema;
        DefaultTableModel lm;
        lm = myAS400.getLibrary(Schema);

        jTable1.setModel(lm);
        jTable1.setShowGrid(false);
        jTable1.setDefaultRenderer(Object.class, new MyRenderer(jTable1));
        TableDesign(jTable1);

    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void LadeTabellenstrucktur(String TabellenName) {
        //TabellenStructurTableModell lm;
        TabellenStrucktur = myAS400.getTabellenStrucktur(AS400Schemaname, TabellenName);

        jTable2.setModel(TabellenStrucktur);
        jTable2.setDefaultRenderer(Object.class, new MyRenderer(jTable2));
        //  jTable2.getColumnModel().getColumn(0).setCellRenderer(jTable2.getDefaultRenderer(Boolean.class));

        TabellenStrucktur.fireTableDataChanged();

    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void LadeTabellenDaten(String TabellenName) {
        initmyDataTable();

        AS400Tabellenname = TabellenName;

        DefaultTableModel lm;

        lm = myAS400.getTableData(AS400Schemaname, TabellenName, getFeldnamen(), jTextField1.getText(), jCheckBox1.isSelected());

        jTable3.setModel(lm);
    }
//******************************************************************************
//
//
//
//******************************************************************************

    public static void main(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        final SplashJFrame f1 = new SplashJFrame();
        f1.dispose();
        f1.setUndecorated(true);
        f1.setVisible(true);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    MainFrame frame = new MainFrame();
                    frame.dispose();

                    Thread.sleep(3000);

                    frame.setVisible(true);
                    f1.setVisible(false);

                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class
                            .getName()).log(Level.SEVERE, null, ex);

                }
            }
        });

    }
//******************************************************************************
//
//
//
//******************************************************************************

    private void DatenNeuLaden() {
        SelectText = jTextField1.getText();
        LadeTabellenDaten(AS400Tabellenname);
    }

    private void SpeicherUpdate(DefaultTableModel tm) {
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        Vector<Vector<Object>> type = new Vector<Vector<Object>>();
        data = tm.getDataVector();
        int maxCol = tm.getColumnCount();
        neuValue = data.get(edtRow).get(edtCol).toString();
        type = TabellenStrucktur.getDataVector();
        String FeldWert = " ";
        String FeldName = " ";
        if (type.get(edtCol).get(2).toString().equals("CHAR")) {
            neuValue = "'" + neuValue.trim() + "'";
        }

        String UpdateString = "Update " + AS400Schemaname + "/" + AS400Tabellenname + " SET " + tm.getColumnName(edtCol) + " = " + neuValue + " where ";

        // System.out.println("alter Wert = "+tm.getColumnName(edtCol)+" = "+altValue);
        for (int i = 0; i < maxCol; i++) {
            FeldName = tm.getColumnName(i);
            if (i == edtCol) {
                FeldWert = altValue;
            } else {
                FeldWert = data.get(edtRow).get(i).toString();
            }
            String Type = type.get(i).get(2).toString();
            if (Type.equals("CHAR")) {
                if ("".equals(FeldWert.trim())) {
                    FeldWert = "' '";
                } else {
                    FeldWert = "'" + FeldWert.trim() + "'";
                }
            }
            if (i == maxCol - 1) {
                UpdateString += FeldName + " = " + FeldWert;
            } else {
                UpdateString += FeldName + " = " + FeldWert + " and ";
            }
        }

        String error;
        try {
            LogInfo(UpdateString);
            error = myAS400.executeSQL(UpdateString);
            LogInfo(error);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    //******************************************************************************
//
//
//
//******************************************************************************
    private void initmyDataTable() {
        jTable3 = new myTable();
        jTable3.setEnabled(false);

//        jTable3.setModel(new javax.swing.table.DefaultTableModel(
        //                new Object[][]{
        //                    {null, null, null, null},
        //                    {null, null, null, null},
        //                    {null, null, null, null},
        //                    {null, null, null, null}
        //                },
        //                new String[]{
        //                    "Title 1", "Title 2", "Title 3", "Title 4"
        //                }
        //        ));
        //jTable3.getColumnModel().getColumn(1).setCellEditor(new myTableCellEditor());
        JTableHeader header1 = jTable3.getTableHeader();
        header1.addMouseListener(new TableHeaderMouseListener(jTable3));

        jTable3.getDefaultEditor(String.class).addCellEditorListener(
                new CellEditorListener() {
                    public void editingCanceled(ChangeEvent e) {
                        System.out.println("editingCanceled");
                    }

                    public void editingStopped(ChangeEvent e) {
                        //  jTable3.getModel().getValueAt(WIDTH, WIDTH)
                        DefaultTableModel tm = (DefaultTableModel) jTable3.getModel();
                        //Vector<Object> rowData = tm.getDataVector().elementAt(Rowindex);
                        SpeicherUpdate(tm);
                    }

                });

        jTable3.addXXXListener(new myTable.XXXListener() {
            @Override
            public void dispatchXXX(int row, int col, String e) {
                edtCol = col;
                edtRow = row;
                altValue = e;
            }
        });

        jTable3.setDefaultRenderer(Object.class, new MyRenderer(jTable3));

        jTable3.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable3.setCellEditor(new myTableCellEditor());
        jTable3.setCellSelectionEnabled(true);
        jTable3.setSelectionBackground(new java.awt.Color(255, 255, 0));
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jTable3);
    }

    public class TableHeaderMouseListener extends MouseAdapter {

        private JTable table;

        public TableHeaderMouseListener(JTable table) {
            this.table = table;
        }

        public void mouseClicked(MouseEvent event) {

            SelectText = jTextField1.getText();

            Point point = event.getPoint();
            int column = table.columnAtPoint(point);
            String name = table.getModel().getColumnName(column);
            String Type = findType(name).trim().toUpperCase();
            if (SelectText.length() > 0) {
                if (Type.equals("CHAR")) {
                    SelectText = SelectText + " and " + name + " = ' '";
                } else {
                    SelectText = SelectText + " and " + name + " = 0";
                }
            } else {
                if (Type.equals("CHAR")) {
                    SelectText = SelectText + name + " = ' '";
                } else {
                    SelectText = SelectText + name + " = 0";
                }
            }

            jTextField1.setText(SelectText);

        }
    }
//******************************************************************************
//
//
//
//******************************************************************************

    public class TableHeaderMouseListenerChecket extends MouseAdapter {

        private JTable table;

        public TableHeaderMouseListenerChecket(JTable table) {
            this.table = table;
        }

        public void mouseClicked(MouseEvent event) {
            JTableHeader header = jTable2.getTableHeader();
            if (header.getName() == "[x]") {
                Point point = event.getPoint();
                int column = table.columnAtPoint(point);
                if (column == 0) {
                    for (int row = 0; row <= table.getRowCount() - 1; row++) {
                        table.setValueAt(true, row, 0);
                    }
                }
                header.setName("[ ]");
            } else {
                Point point = event.getPoint();
                int column = table.columnAtPoint(point);
                if (column == 0) {
                    for (int row = 0; row <= table.getRowCount() - 1; row++) {
                        table.setValueAt(false, row, 0);
                    }
                }
                header.setName("[x]");
            }

        }
    }

    public void LogInfo(String Info) {
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String uhrzeit = sdf.format(new Date());
        listenModell.addElement(uhrzeit + " " + Info);

        jList1.setModel(listenModell);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables

}
